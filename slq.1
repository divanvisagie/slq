.TH SLQ 1 "December 2025" "slq 0.1.0" "User Commands"
.SH NAME
slq \- Storstockholms Lokaltrafik Query Tool
.SH SYNOPSIS
.B slq
.I COMMAND
.RI [ OPTIONS ]
.RI [ ARGUMENTS ]
.SH DESCRIPTION
.B slq
is a command-line tool for querying Storstockholms Lokaltrafik (SL) information. It provides real-time departure information and station search capabilities for Stockholm's public transportation system.

The tool uses SL's public APIs to fetch information about buses, trains, metro lines, and trams throughout the Stockholm region.
.SH COMMANDS
.TP
.BR search " " \fIQUERY\fR
Search for stations by name. Returns tab-delimited output with station names and IDs, suitable for shell scripting.
.TP
.BR departures " " \fISTATION\fR " [" \fIOPTIONS\fR "]"
Show upcoming departures from a station. Station can be specified by name or numeric ID. Displays wait times, departure times, line numbers, destinations, and transport types.
.SH OPTIONS
.SS Global Options
.TP
.BR \-h ", " \-\-help
Show help message and exit.
.SS Departures Options
.TP
.BR \-l ", " \-\-line " " \fILINE\fR
Filter departures by line number. Base line numbers (e.g., "28") include variants (e.g., "28s"). Specific variants can be filtered with exact matches.
.TP
.BR \-c ", " \-\-count " " \fINUMBER\fR
Number of departures to show. Defaults to 10 if not specified.
.TP
.BR \-d ", " \-\-destination " " \fIDESTINATION\fR
Filter departures by destination name or ID. Supports partial name matching (case-insensitive) or exact ID matching.
.TP
.BR \-t ", " \-\-transport\-type " " \fITYPE\fR
Filter departures by transport type. Valid types are:
.RS
.IP \(bu 2
.B metro
\- Stockholm metro (Tunnelbanan)
.IP \(bu 2
.B bus
\- Bus lines (Blåbuss, Närtrafiken, etc.)
.IP \(bu 2
.B train
\- Train lines (Pendeltåg, Roslagsbanan, etc.)
.IP \(bu 2
.B tram
\- Tram lines (Spårväg City)
.RE
.SH OUTPUT FORMATS
.SS Search Output
Tab-delimited format with station name and ID:
.nf
.RS
T-Centralen	9001
Centralen	1002
.RE
.fi
.SS Departures Output
Tabular format with wait time, departure time, line, destination, and transport type:
.nf
.RS
Wait  Time   Line   Destination          Type
----------------------------------------------------------------------
Now   13:35  13     Ropsten              Tunnelbanans röda linje
1m    13:36  19     Odenplan             Tunnelbanans gröna linje
2m    13:37  14     Fruängen             Tunnelbanans röda linje
.RE
.fi
.SH EXAMPLES
.SS Basic Station Search
.nf
.RS
# Find stations containing "Central"
slq search "Central"

# Find T-Centralen specifically
slq search "T-Centralen"
.RE
.fi
.SS Departure Information
.nf
.RS
# Show all departures from T-Centralen
slq departures "T-Centralen"

# Show departures using station ID
slq departures "9001"

# Show only metro departures
slq departures "T-Centralen" --transport-type metro

# Show only line 14 departures
slq departures "T-Centralen" --line 14

# Show only metro line 14 departures
slq departures "T-Centralen" --line 14 --transport-type metro

# Show 20 departures instead of default 10
slq departures "T-Centralen" --count 20

# Combine count with other filters
slq departures "T-Centralen" --line 14 --count 15

# Filter by destination
slq departures "T-Centralen" --destination "Akalla"

# Combine all filters
slq departures "T-Centralen" --line 14 --transport-type metro --destination "Fruängen" --count 5
.RE
.fi
.SS Line Filtering Examples
.nf
.RS
# Show line 28 and variants (28, 28s, 28X, etc.)
slq departures "Station" --line 28

# Show only 28s departures
slq departures "Station" --line 28s

# Show more results
slq departures "Station" --count 25

# Filter by destination (partial matching)
slq departures "T-Centralen" --destination "Airport"
.RE
.fi
.SS Shell Scripting
.nf
.RS
# Get station ID for scripting
STATION_ID=$(slq search "T-Centralen" | head -1 | cut -f2)

# Get departures for the found station
slq departures "$STATION_ID"

# Find all stations with "central" in name
slq search "central" | grep -i central

# Get only bus departures from Odenplan
slq departures "Odenplan" --transport-type bus

# Get departures to specific destination
slq departures "T-Centralen" --destination "Akalla"
.RE
.fi
.SH TIMEZONE
All times are displayed in Europe/Stockholm timezone (Swedish local time). The tool automatically handles daylight saving time transitions.
.SH EXIT STATUS
.B slq
exits with status 0 on success, 1 on error, and 2 on invalid command-line usage.
.SH API DEPENDENCIES
This tool requires internet connectivity and uses the following SL APIs:
.IP \(bu 2
SL Transport API v1 for station information and departures
.IP \(bu 2
No API keys required
.SH ENVIRONMENT
.TP
.B RUST_LOG
Set to "debug" for verbose logging output.
.TP
.B RUST_BACKTRACE
Set to "1" for detailed error backtraces.
.SH FILES
.TP
.I ~/.local/bin/slq
User installation location
.TP
.I /usr/local/bin/slq
System-wide installation location
.SH NOTES
.SS Line Number Filtering
When filtering by line number, the tool uses intelligent matching:
.IP \(bu 2
Base numbers (e.g., "28") match all variants ("28", "28s", "28X")
.IP \(bu 2
Specific variants (e.g., "28s") match exactly
.IP \(bu 2
No false positives (e.g., "1" does not match "14")
.SS Transport Type Filtering
The tool automatically maps English filter terms to Swedish transport system names:
.IP \(bu 2
"metro" matches "Tunnelbanan" systems
.IP \(bu 2
"bus" matches various bus systems like "Blåbuss" and "Närtrafiken"
.IP \(bu 2
"train" matches "Pendeltåg" and "Roslagsbanan"
.IP \(bu 2
"tram" matches "Spårväg" systems
.SS Data Quality
The tool automatically filters out departures with unknown transport types to provide cleaner, more useful output.
.SH BUGS
Report bugs at: https://github.com/your-repo/slq/issues
.SH AUTHOR
Written by Divan Visagie.
.SH COPYRIGHT
Copyright (c) 2025, Divan Visagie. Licensed under the BSD 3-Clause License.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH SEE ALSO
.BR curl (1),
.BR jq (1)

SL (Storstockholms Lokaltrafik) official website: https://sl.se

SL API documentation: https://trafiklab.se
